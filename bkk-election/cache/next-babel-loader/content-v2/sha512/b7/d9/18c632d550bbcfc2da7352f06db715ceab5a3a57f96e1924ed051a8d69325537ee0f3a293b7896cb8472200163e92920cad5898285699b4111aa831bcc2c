{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport { isMobileOnly } from 'react-device-detect';\nimport * as d3 from 'd3';\nexport default function DashboardLineChart({\n  selected_theme,\n  data_line_chart\n}) {\n  const createChart = () => {\n    let AVG;\n\n    if (selected_theme.name === 'น้ำท่วมถนน') {\n      AVG = [{\n        year: '55',\n        value: 22.53\n      }, {\n        year: '56',\n        value: 22.53\n      }, {\n        year: '57',\n        value: 22.53\n      }, {\n        year: '58',\n        value: 22.53\n      }, {\n        year: '59',\n        value: 22.53\n      }, {\n        year: '60',\n        value: 22.53\n      }, {\n        year: '61',\n        value: 22.53\n      }, {\n        year: '62',\n        value: 22.53\n      }];\n    } else if (selected_theme.name === 'พื้นที่สีเขียว') {\n      AVG = [{\n        year: '55',\n        value: 9\n      }, {\n        year: '56',\n        value: 9\n      }, {\n        year: '57',\n        value: 9\n      }, {\n        year: '58',\n        value: 9\n      }, {\n        year: '59',\n        value: 9\n      }, {\n        year: '60',\n        value: 9\n      }, {\n        year: '61',\n        value: 9\n      }, {\n        year: '62',\n        value: 9\n      }];\n    } else if (selected_theme.name === 'มลพิษในคลอง') {\n      AVG = [{\n        year: '55',\n        value: 15\n      }, {\n        year: '56',\n        value: 15\n      }, {\n        year: '57',\n        value: 15\n      }, {\n        year: '58',\n        value: 15\n      }, {\n        year: '59',\n        value: 15\n      }, {\n        year: '60',\n        value: 15\n      }, {\n        year: '61',\n        value: 15\n      }, {\n        year: '62',\n        value: 15\n      }];\n    } else if (selected_theme.name === 'ขยะมูลฝอย') {\n      AVG = [{\n        year: '55',\n        value: 1.05\n      }, {\n        year: '56',\n        value: 1.15\n      }, {\n        year: '57',\n        value: 1.11\n      }, {\n        year: '58',\n        value: 1.13\n      }, {\n        year: '59',\n        value: 1.14\n      }, {\n        year: '60',\n        value: 1.13\n      }, {\n        year: '61',\n        value: 1.15\n      }, {\n        year: '62',\n        value: 1.18\n      }];\n    } else if (selected_theme.name === 'ฝุ่นควันเกินมาตรฐาน') {\n      AVG = [{\n        year: '55',\n        value: 25\n      }, {\n        year: '56',\n        value: 25\n      }, {\n        year: '57',\n        value: 25\n      }, {\n        year: '58',\n        value: 25\n      }, {\n        year: '59',\n        value: 25\n      }, {\n        year: '60',\n        value: 25\n      }, {\n        year: '61',\n        value: 25\n      }, {\n        year: '62',\n        value: 25\n      }];\n    }\n\n    let data = [];\n\n    _.forIn(data_line_chart, (d, key) => {\n      data.push({\n        year: key.substring(2, 4),\n        value: d\n      });\n    });\n\n    let height = isMobileOnly ? 150 : 200;\n    let width = isMobileOnly ? 300 : 540;\n    const margin = {\n      top: 40,\n      right: 25,\n      bottom: 40,\n      left: 25\n    };\n    width = width - margin.left - margin.right;\n    height = height - margin.top - margin.bottom;\n    const x_scale = d3.scaleTime().range([0, width]);\n    x_scale.domain(d3.extent(data, function (d) {\n      return d.year;\n    }));\n    const scale_data = [...data, ...AVG];\n    const y_scale = d3.scaleLinear().domain([0, d3.max(scale_data, d => d.value)]).range([height, 0]);\n    const valueLine = d3.line().x(function (d) {\n      return x_scale(d.year);\n    }).y(function (d) {\n      return y_scale(d.value);\n    });\n    const lineBgArea = d3.area().x(function (d) {\n      return x_scale(d.year);\n    }).y(function (d) {\n      return y_scale(d.value);\n    }).y1(function () {\n      return height;\n    });\n    const x_axis = d3.axisBottom(x_scale).ticks(6).tickSize(0).tickFormat(d3.format('.0f')).tickValues(data.map(d => d.year));\n    const chart = d3.select('.line-chart').append('svg').attr('class', 'svg-line-chart').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    chart.append('g').attr('class', 'x-axis').attr('transform', 'translate(0,' + height + ')').call(x_axis);\n    chart.append('path').data([data]).attr('class', 'bg-line').attr('d', lineBgArea).style('fill', selected_theme.color50);\n    chart.selectAll().data(data).enter().append('rect').attr('class', 'value-line').attr('x', function (d) {\n      return x_scale(d.year);\n    }).attr('y', function (d) {\n      return y_scale(d.value);\n    }).attr('height', function (d) {\n      return height - y_scale(d.value);\n    }).attr('width', 1).style('fill', selected_theme.color);\n    chart.append('path').data([data]).attr('class', 'line').attr('d', valueLine).style('fill', 'none').style('stroke', selected_theme.color).style('stroke-width', 2);\n\n    if (selected_theme.name != 'น้ำท่วมถนน') {\n      chart.append('path').data([AVG]).attr('class', 'dash-line').attr('d', valueLine).style('fill', 'none').style('stroke', 'black').style('stroke-width', 1).style('stroke-dasharray', 5);\n    }\n\n    chart.selectAll().data(data).enter().append('circle').attr('class', 'dot').attr('cx', function (d) {\n      return x_scale(d.year);\n    }).attr('cy', function (d) {\n      return y_scale(d.value);\n    }).attr('r', 3).style('fill', selected_theme.color);\n    chart.selectAll().data(data).enter().append('rect').attr('class', 'bg-label').attr('width', function (d) {\n      return 36;\n    }).attr('height', function (d) {\n      return 17;\n    }).attr('x', function (d) {\n      return x_scale(d.year) - 18;\n    }).attr('y', function (d) {\n      return y_scale(d.value) - 23;\n    }).attr('rx', 3).style('fill', 'white').style('opacity', 0.8);\n    chart.selectAll().data(data).enter().append('text').attr('class', 'label').attr('x', function (d) {\n      return x_scale(d.year);\n    }).attr('y', function (d) {\n      return y_scale(d.value);\n    }).attr('dy', '-10').style('font-size', '12px').style('text-anchor', 'middle').text(function (d) {\n      return d.value ? d.value : 0;\n    });\n    chart.selectAll('g.tick').select('text').attr('y', 12).style('font-size', '14px').style('font-weight', 'bold');\n  };\n\n  d3.select('.svg-line-chart').remove();\n  createChart();\n  useEffect(() => {\n    createChart();\n  }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"inline-block mx-auto border line-chart\"\n  });\n}","map":null,"metadata":{},"sourceType":"module"}