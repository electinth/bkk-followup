{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { isMobileOnly, isMobile } from 'react-device-detect';\nimport * as d3 from 'd3';\nimport close_img from '../../assets/images/close_map.svg';\n\nconst map = ({\n  selected_year,\n  selected_theme,\n  data,\n  state_dropdown,\n  checked,\n  raw_data,\n  SET_DISTRICT,\n  district\n}) => {\n  const actived_tool_tip = name => {\n    SET_DISTRICT(name);\n  };\n\n  const disable_tool_tip = name => {\n    d3.select(`.rect${name}`).style('stroke', 'none');\n    d3.select(`.minimap${name}`).style('fill', 'black');\n    d3.select(`.tooltip${name}`).style('visibility', 'hidden');\n    SET_DISTRICT(null);\n  };\n\n  const mouseover = (_, d) => {\n    if (!isMobile) {\n      if (d.districtName != district) {\n        d3.select(`.rect${d.districtName}`).style('stroke-width', 1).style('stroke', 'white');\n        d3.select(`.minimap${d.districtName}`).style('fill', 'white');\n        d3.select(`.tooltip${d.districtName}`).style('visibility', 'visible');\n      }\n    }\n  };\n\n  const mouseout = d => {\n    if (!isMobile) {\n      if (state_dropdown === 'group' && checked != 'เขตพื้นที่ทั้งหมด') {\n        if (!_.some(raw_data.rankings, {\n          districtName: d.districtName\n        })) {\n          d3.select(`.rect${d.districtName}`).style('stroke', 'none');\n          d3.select(`.minimap${d.districtName}`).style('fill', 'black');\n          d3.select(`.tooltip${d.districtName}`).style('visibility', 'hidden');\n        }\n      } else {\n        if (district != d.districtName) {\n          d3.select(`.rect${d.districtName}`).style('stroke', 'none');\n          d3.select(`.minimap${d.districtName}`).style('fill', 'black');\n          d3.select(`.tooltip${d.districtName}`).style('visibility', 'hidden');\n        }\n      }\n    }\n  };\n\n  const color = d => {\n    if (d > 100) {\n      return '#1570FF';\n    } else if (d > 80) {\n      return '#3A87FF';\n    } else if (d > 60) {\n      return '#609EFF';\n    } else if (d > 40) {\n      return '#85B5FF';\n    } else if (d > 20) {\n      return '#ABCCFF';\n    } else if (d > 0) {\n      return '#D0E2FF';\n    }\n  };\n\n  const box_width = isMobileOnly ? 30 : 50;\n  const box_gap = isMobileOnly ? 2 : 3;\n  const r_max = isMobileOnly ? 15 : 20;\n  const bkk_width = 11;\n  const bkk_height = 8;\n  let r_scale = d3.scaleSqrt().range([0, r_max]);\n\n  let cx = d => (+d.X - 1) * (box_width + box_gap) + box_width / 2;\n\n  let cy = d => (+d.Y - 1) * (box_width + box_gap) + box_width / 2;\n\n  let add_map = function (parent, data, ref, colors, year) {\n    let unit, tool_top, tool_bot, avg;\n\n    if (selected_theme.name === 'น้ำท่วมถนน') {\n      unit = 'ครั้ง';\n      tool_top = 'ระดับน้ำท่วมบนถนน';\n      tool_bot = 'โดยเฉลี่ย';\n    } else if (selected_theme.name === 'พื้นที่สีเขียว') {\n      unit = 'ตร.ม./คน';\n      tool_top = 'ปริมาณ';\n      tool_bot = 'พื้นที่สีเขียว';\n      avg = '9';\n    } else if (selected_theme.name === 'มลพิษในคลอง') {\n      unit = 'มก./ลิตร';\n      tool_top = 'ปริมาณ';\n      tool_bot = 'มลพิษในคลอง';\n      avg = '15';\n    } else if (selected_theme.name === 'ขยะมูลฝอย') {\n      unit = 'กก./คน/วัน';\n      tool_top = 'ปริมาณ';\n      tool_bot = 'ขยะมูลฝอย';\n      avg = '1.864';\n    } else if (selected_theme.name === 'ฝุ่นควันเกินมาตรฐาน') {\n      unit = 'มค.ก./ลบ.ม.';\n      tool_top = 'ปริมาณ';\n      tool_bot = 'ฝุ่นควันเกินมาตรฐาน';\n      avg = '25';\n    }\n\n    r_scale.domain([0, d3.max(data, d => +d.value)]);\n    d3.select('#maps').style('width', bkk_width * box_width + (bkk_width - 1) * box_gap + 'px').style('height', bkk_height * box_width + (bkk_height - 1) * box_gap + 'px');\n    let map = parent.append('svg').attr('class', year + ' ' + 'svg-wrapper').style('display', year === selected_year ? 'block' : 'none').attr('width', bkk_width * box_width + (bkk_width - 1) * box_gap).attr('height', bkk_height * box_width + (bkk_height - 1) * box_gap);\n    map.selectAll('g').data(data).join(enter => {\n      let group = enter.append('g').attr('transform', d => `translate(${cx(d)}, ${cy(d)})`);\n      group.append('rect').attr('class', d => `group_circle rect${d.districtName}`).attr('width', box_width).attr('height', box_width).attr('x', -box_width / 2).attr('y', -box_width / 2).style('cursor', d => d.value > 0 ? 'pointer' : '').on('mouseover', (e, d) => d.value ? mouseover(e, d) : '').on('mouseout', (_, d) => mouseout(d)).on('click', (_, d) => d.value > 0 ? actived_tool_tip(d.districtName) : '');\n      group.append('circle').attr('r', d => r_scale(+d.value)).style('pointer-events', 'none').style('fill', d => {\n        let value = +d.value;\n        if (value === ref) return colors[1];\n        if (value === 0) return null;\n        if (selected_theme.name === 'น้ำท่วมถนน') return color(d.value);\n        return value > ref ? colors[0] : colors[2];\n      });\n      group.append('circle').attr('r', r_scale(ref)).style('fill', 'none').style('stroke-width', d => selected_theme.name === 'น้ำท่วมถนน' && d.value > 0 ? 0 : 1).style('stroke', 'white').style('stroke-linecap', 'round').style('stroke-dasharray', '5 4').style('pointer-events', _ => 'none');\n      group.append('svg:image').attr('xlink:href', d => {\n        let value = +d.value;\n        return value === 0 ? close_img : '';\n      }).attr('x', _ => -3).attr('y', _ => -3).attr('height', 6).attr('width', 6).style('pointer-events', _ => 'none');\n      d3.select('#maps').append('div').attr('class', 'tool_tip_wrapper').selectAll('div').data(data).join(enter => {\n        let tooltip = enter.append('div').attr('class', d => `tool_tip_detail_wrapper rounded-lg tooltip${d.districtName}`).style('top', d => {\n          if (isMobile) {\n            return cy(d) + 'px';\n          } else {\n            return cy(d) + 60 + 'px';\n          }\n        }).style('left', d => {\n          if (isMobileOnly) {\n            if (cx(d) < screen.width / 2) {\n              return cx(d) + 20 + 'px';\n            } else {\n              return cx(d) - 150 + 'px';\n            }\n          } else if (isMobile) {\n            if (cx(d) < screen.width / 2) {\n              return cx(d) + 120 + 'px';\n            } else {\n              return cx(d) - 130 + 'px';\n            }\n          } else {\n            return cx(d) + 40 + 'px';\n          }\n        }).style('visibility', d => 'hidden');\n        let header = tooltip.append('div').attr('class', 'tooltip_header rounded-t-lg flex p3 font-bold').style('background', selected_theme.color);\n        header.append('div').attr('class', 'tooltip_h_left flex-1').append('div').text(d => `เขต${d.districtName}`).append('div').text(_ => `ปี 25${selected_year}`);\n        header.append('div').attr('class', 'close_tooltip cursor-pointer').text(_ => 'x').on('click', (_, d) => disable_tool_tip(d.districtName));\n        let body = tooltip.append('div').attr('class', 'tooltip_body  flex leading-4 font-bold');\n        body.append('div').attr('class', 'tooltip_b_left p3 flex-1').append('div').text(_ => tool_top).append('div').text(_ => tool_bot);\n        body.append('div').attr('class', 'tooltip_b_right flex text-right flex-1 justify-end').style('color', _ => selected_theme.text_color).append('div').attr('class', 'tooltip_number p2').text(d => d.value ? d.value : 0).append('div').attr('class', 'tooltip_unit p3').text(_ => unit);\n        tooltip.append('div').attr('class', 'tooltip_footer rounded-b-lg flex p3  justify-center').text(d => {\n          if (d.value > avg) {\n            return `สูงกว่าค่าเฉลี่ย`;\n          } else if (d.value < avg) {\n            return `ต่ำกว่าค่าเฉลี่ย`;\n          }\n        });\n      });\n    });\n  };\n\n  const run = () => {\n    let unit;\n    let data_per_year = data.byYear;\n    let merge_data = [];\n    d3.csv('/bkk-election/data/map.csv').then(map => {\n      let selected_data = data_per_year[`25${selected_year}`];\n\n      _.forIn(selected_data, data => {\n        const d = map.find(m => m.districtName === data.districtName);\n        merge_data.push(_objectSpread(_objectSpread({}, data), d));\n      });\n\n      if (selected_theme.name === 'พื้นที่สีเขียว') {\n        unit = 9;\n      } else if (selected_theme.name === 'มลพิษในคลอง') {\n        unit = 15;\n      } else if (selected_theme.name === 'ขยะมูลฝอย') {\n        unit = 1.8;\n      } else if (selected_theme.name === 'ฝุ่นควันเกินมาตรฐาน') {\n        unit = 37;\n      } else if (selected_theme.name === 'น้ำท่วมถนน') {\n        unit = d3.mean(merge_data, d => +d.value);\n      }\n\n      const maps = d3.select('#maps');\n      d3.select('.svg-wrapper').remove();\n      d3.selectAll('.tool_tip_wrapper').remove();\n      add_map(maps, merge_data, unit, [selected_theme.color, '#CCF4DD', '#FFFFFF'], selected_year);\n\n      if (state_dropdown === 'group' && checked != 'เขตพื้นที่ทั้งหมด' && !district) {\n        _.forEach(raw_data.rankings, district => {\n          d3.select(`.rect${district.districtName}`).style('stroke-width', 1).style('stroke', 'white');\n          d3.select(`.minimap${district.districtName}`).style('fill', 'white');\n        });\n      } else if (district) {\n        d3.selectAll(`.minimap`).style('fill', 'none');\n        d3.selectAll('.tool_tip_detail_wrapper').style('visibility', 'hidden');\n        d3.selectAll(`.group_circle`).style('stroke', 'none');\n        d3.select(`.rect${district}`).style('stroke-width', 1).style('stroke', 'white');\n        d3.select(`.minimap${district}`).style('fill', 'white');\n        d3.select(`.tooltip${district}`).style('visibility', 'visible');\n      }\n    });\n  };\n\n  run();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: \"relative flex items-center justify-center flex-1 m-auto my-5 lg:my-0\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      id: \"maps\"\n    })\n  });\n};\n\nexport default map;","map":null,"metadata":{},"sourceType":"module"}